{%- if run_day == start_date -%}
SELECT
  DATE('{{ run_day }}') as {{ partition_field }},
  {{ join_key }},
{%- for feature in features %}
{%- for aggregation in aggregations %}
{%- for aggregation_window in aggregation_windows %}
{%- if loop.first %}
  {{ feature }} AS {{ aggregation }}_{{feature}}_{{window_type}}_{{aggregation_window}},
{%- else -%}
  NULL AS {{ aggregation }}_{{feature}}_{{window_type}}_{{aggregation_window}},
{%- endif -%}
{%- endfor -%}
{%- endfor -%}
{%- endfor %}
FROM
  {{ algo_project }}.{{ dataset }}.{{ upstream_table }}  as todays_data
WHERE
  {{ partition_field }} = '{{ run_day }}'
  AND {{join_key}} IS NOT NULL
{%- else -%}
with reference_map as (
{{reference_map}}
)
SELECT
  reference_map.day,
  reference_map.{{ join_key }},
{%- for feature in features %}
{%- for aggregation in aggregations %}
{%- for aggregation_window in aggregation_windows %}
CASE
  WHEN '{{aggregation}}' = 'cumulative_sum'
    THEN
      CASE
        WHEN DATE_ADD(DATE(reference_day), interval {{ (aggregation_window  * window_length) - window_length }} {{window_type}}) = '{{run_day}}'
          THEN todays_data.{{feature}}
        WHEN DATE_ADD(DATE(reference_day), interval {{ (aggregation_window  * window_length) - window_length}} {{window_type}}) < '{{run_day}}'
          AND '{{run_day}}' < DATE_ADD(DATE(reference_day), interval {{ aggregation_window * window_length }} {{ window_type }})
            THEN
             NULLIF(
              IFNULL(yesterdays_data.{{ aggregation }}_{{feature}}_{{ window_type }}_{{aggregation_window}}, 0) + IFNULL(todays_data.{{feature}}, 0),
              0
            )
        WHEN '{{run_day}}' >= DATE_ADD(DATE(reference_day), interval {{ aggregation_window * window_length}} {{ window_type }})
          THEN yesterdays_data.{{ aggregation }}_{{feature}}_{{ window_type }}_{{aggregation_window}}
        ELSE Null
      END
END AS {{ aggregation }}_{{feature}}_{{ window_type }}_{{aggregation_window}},
{%- endfor -%}
{%- endfor -%}
{%- endfor %}
FROM
  reference_map
LEFT JOIN
  {{ algo_project }}.{{ dataset }}.{{ upstream_table }} as todays_data
{# this is an ASSUMPTION #}
USING({{ join_key }})
LEFT JOIN
  {{ algo_project }}.{{ dataset }}.{{ table_name }}  AS yesterdays_data
{# this is an ASSUMPTION #}
on todays_data.{{ join_key }} = yesterdays_data.{{ join_key }}
AND DATE_SUB(todays_data.{{ partition_field }}, INTERVAL 1 day) = yesterdays_data.{{ partition_field }}
WHERE
  todays_data.{{ partition_field }} = '{{ run_day }}'
  AND {{join_key}} IS NOT NULL
{% endif %}
